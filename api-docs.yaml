openapi: 3.0.1
info:
  title: Houses API
  description: api Houses
  version: 1.0.0
  contact:
    email: regisrifaldi44@gmail.com
servers:
  - url: http://localhost:3000/v1/
paths:
  /houses:
    post:
      summary: create new houses
      description: mendaftarkan houses baru kedalam sistem..
      requestBody:
        $ref: "#/components/requestBodies/Register"
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Houses"
                  - type: object
                    properties:
                      has_garden:
                        type: boolean
                        example: true
        400:
          description: duplicated email
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: houses already used!
      security:
        - bearerAuth: []

    get:
      summary: get all houses
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: OK
                  data:
                    type: array
                    items:
                      allOf:
                        - $ref: "#/components/schemas/Houses"
                        - type: object
                          properties:
                            has_garden:
                              type: boolean
                              example: true
  /houses/{id}:
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    get:
      summary: get detail houses
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: OK
                  data:
                    allOf:
                      - $ref: "#/components/schemas/Houses"
                      - type: object
                        properties:
                          has_garden:
                            type: boolean
                            example: true
    put:
      summary: update houses
      parameters:
        - schema:
            type: integer
          name: id
          in: path
          required: true
          example: 11
      requestBody:
        $ref: "#/components/requestBodies/Register"
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: OK
                  data:
                    allOf:
                      - $ref: "#/components/schemas/Houses"
                      - type: object
                        properties:
                          has_garden:
                            type: boolean
                            example: true
    delete:
      summary: delete houses
      parameters:
        - schema:
            type: integer
          name: id
          in: path
          required: true
          example: 11
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: OK
                  data:
                    allOf:
                      - $ref: "#/components/schemas/Houses"
                      - type: object
                        properties:
                          has_garden:
                            type: boolean
                            example: true

components:
  schemas:
    Houses:
      title: Houses
      type: object
      properties:
        id:
          type: integer
          example: 11
        address:
          type: string
          example: Jl. Subang no.30, Bandung
        owner_name:
          type: string
          example: Ujang
        num_rooms:
          type: string
          example: 18
  requestBodies:
    Register:
      content:
        application/json:
          schema:
            type: object
            properties:
              address:
                type: string
                example: Jl. Subang no.30, Bandung
              owner_name:
                type: string
                example: Ujang
              num_rooms:
                type: string
                example: 18
              has_garden:
                type: boolean
                example: true
